*** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    √ should exist and be executable (1 ms)
    × a living cell with zero living neighbors should die and have its life time reset to zero (3 ms)
    × a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    √ a living cell with two living neighbors should survive and have its life time incremented by one (1 ms)
    √ a living cell with three living neighbors should survive and have its life time incremented by one
    × a living cell with four living neighbors should die and have its life time reset to zero
    √ a dead cell with zero living neighbors should remain dead and have a life time of zero
    √ a dead cell with one living neighbor should remain dead and have a life time of zero (1 ms)
    √ a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    √ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (1 ms)
    √ a dead cell with four living neighbors should remain dead and have a life time of zero

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 8 passed, 11 total
Snapshots:   0 total
Time:        0.719 s, estimated 2 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.